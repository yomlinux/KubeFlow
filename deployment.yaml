# ---------------------------------------------------
# Namespace
# ---------------------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: flow
---
# ---------------------------------------------------
# PersistentVolumes + PVCs
# ---------------------------------------------------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: flow-nfs-pv
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-storage
  nfs:
    server: 10.0.0.135
    path: /data/app2/flow/shared
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flow-nfs-pvc
  namespace: flow
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-storage
  resources:
    requests:
      storage: 50Gi
  volumeName: flow-nfs-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mariadb-nfs-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-storage
  nfs:
    server: 10.0.0.135
    path: /data/app2/flow/mariadb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mariadb-pvc
  namespace: flow
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-storage
  resources:
    requests:
      storage: 20Gi
  volumeName: mariadb-nfs-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-nfs-pv
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-storage
  nfs:
    server: 10.0.0.135
    path: /data/app2/flow/minio
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: flow
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-storage
  resources:
    requests:
      storage: 50Gi
  volumeName: minio-nfs-pv
---
# ---------------------------------------------------
# MariaDB
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
      - name: mariadb
        image: mariadb:10.6
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: flowpass
        - name: MYSQL_DATABASE
          value: mlpipeline
        - name: MYSQL_USER
          value: mlpipeline
        - name: MYSQL_PASSWORD
          value: mlpipelinepass
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mariadb-data
      volumes:
      - name: mariadb-data
        persistentVolumeClaim:
          claimName: mariadb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb
  namespace: flow
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mariadb
---
# ---------------------------------------------------
# MinIO
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2023-09-01T00-00-00Z
        args:
        - server
        - /data
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /data
          name: minio-data
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: flow
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: minio
---
# ---------------------------------------------------
# Core Kubeflow Components (with valid tags)
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: centraldashboard
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: centraldashboard
  template:
    metadata:
      labels:
        app: centraldashboard
    spec:
      containers:
      - name: centraldashboard
        image: gcr.io/kubeflow-images-public/centraldashboard:v1.8.1
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /mnt/shared
          name: flow-shared
      volumes:
      - name: flow-shared
        persistentVolumeClaim:
          claimName: flow-nfs-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-pipeline
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ml-pipeline
  template:
    metadata:
      labels:
        app: ml-pipeline
    spec:
      containers:
      - name: ml-pipeline
        image: gcr.io/kubeflow-images-public/ml-pipeline/api-server:v1.8.1
        ports:
        - containerPort: 8888
        env:
        - name: MYSQL_SERVICE_HOST
          value: mariadb.flow.svc.cluster.local
        - name: MYSQL_SERVICE_PORT
          value: "3306"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-db
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metadata-db
  template:
    metadata:
      labels:
        app: metadata-db
    spec:
      containers:
      - name: metadata-db
        image: gcr.io/kubeflow-images-public/metadata-db:v1.8.1
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/lib/metadata-db
          name: metadata-db-data
      volumes:
      - name: metadata-db-data
        persistentVolumeClaim:
          claimName: flow-nfs-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-writer
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metadata-writer
  template:
    metadata:
      labels:
        app: metadata-writer
    spec:
      containers:
      - name: metadata-writer
        image: gcr.io/kubeflow-images-public/metadata-writer:v1.8.1
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: profile-controller
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: profile-controller
  template:
    metadata:
      labels:
        app: profile-controller
    spec:
      containers:
      - name: profile-controller
        image: gcr.io/kubeflow-images-public/profile-controller:v1.8.1
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebooks-controller
  namespace: flow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notebooks-controller
  template:
    metadata:
      labels:
        app: notebooks-controller
    spec:
      containers:
      - name: notebooks-controller
        image: gcr.io/kubeflow-images-public/notebooks-controller:v1.8.1
        ports:
        - containerPort: 8080
---
# ---------------------------------------------------
# Istio VirtualService for all components
# ---------------------------------------------------
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: flow-virtualservice
  namespace: flow
spec:
  hosts:
  - "*"
  gateways:
  - istio-system/istio-ingressgateway-nodeport
  http:
  - match:
    - uri:
        prefix: /centraldashboard
    rewrite:
      uri: /
    route:
    - destination:
        host: centraldashboard.flow.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        prefix: /ml-pipeline
    rewrite:
      uri: /
    route:
    - destination:
        host: ml-pipeline.flow.svc.cluster.local
        port:
          number: 8888
  - match:
    - uri:
        prefix: /metadata-db
    rewrite:
      uri: /
    route:
    - destination:
        host: metadata-db.flow.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        prefix: /metadata-writer
    rewrite:
      uri: /
    route:
    - destination:
        host: metadata-writer.flow.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        prefix: /profile-controller
    rewrite:
      uri: /
    route:
    - destination:
        host: profile-controller.flow.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        prefix: /notebooks-controller
    rewrite:
      uri: /
    route:
    - destination:
        host: notebooks-controller.flow.svc.cluster.local
        port:
          number: 8080

